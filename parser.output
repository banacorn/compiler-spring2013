Terminals which are not used

   MK_DOT
   ERROR


State 201 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | /* empty */

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB dimfn1

   16 dimfn1: MK_LB expr MK_RB dimfn1
   17       | /* empty */

   18 expr_null: expr
   19          | /* empty */

   20 block: decl_list stmt_list
   21      | stmt_list
   22      | decl_list
   23      | /* empty */

   24 decl_list: decl_list decl
   25          | decl

   26 decl: type_decl
   27     | var_decl

   28 type_decl: TYPEDEF type id_list MK_SEMICOLON
   29          | TYPEDEF VOID id_list MK_SEMICOLON

   30 var_decl: type init_id_list MK_SEMICOLON
   31         | ID id_list MK_SEMICOLON

   32 type: INT
   33     | FLOAT

   34 id_list: ID
   35        | id_list MK_COMMA ID
   36        | id_list MK_COMMA ID dim_decl
   37        | ID dim_decl

   38 dim_decl: MK_LB cexpr MK_RB
   39         | dim_decl MK_LB cexpr MK_RB

   40 cexpr: cexpr OP_PLUS mcexpr
   41      | cexpr OP_MINUS mcexpr
   42      | mcexpr

   43 mcexpr: mcexpr OP_TIMES cfactor
   44       | mcexpr OP_DIVIDE cfactor
   45       | cfactor

   46 cfactor: CONST
   47        | MK_LPAREN cexpr MK_RPAREN

   48 init_id_list: init_id
   49             | init_id_list MK_COMMA init_id

   50 init_id: ID
   51        | ID dim_decl
   52        | ID OP_ASSIGN relop_expr

   53 stmt_list: stmt_list stmt
   54          | stmt

   55 stmt: MK_LBRACE block MK_RBRACE
   56     | WHILE MK_LPAREN test MK_RPAREN stmt
   57     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   58     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   59     | IF MK_LPAREN test MK_RPAREN stmt
   60     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   61     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   62     | MK_SEMICOLON
   63     | RETURN MK_SEMICOLON
   64     | RETURN relop_expr MK_SEMICOLON

   65 assign_expr_list: nonempty_assign_expr_list
   66                 | /* empty */

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   68                          | assign_expr

   69 test: assign_expr

   70 assign_expr: ID OP_ASSIGN relop_expr
   71            | relop_expr

   72 relop_expr: relop_term
   73           | relop_expr OP_OR relop_term

   74 relop_term: relop_factor
   75           | relop_term OP_AND relop_factor

   76 relop_factor: expr
   77             | expr rel_op expr

   78 rel_op: OP_EQ
   79       | OP_GE
   80       | OP_LE
   81       | OP_NE
   82       | OP_GT
   83       | OP_LT

   84 relop_expr_list: nonempty_relop_expr_list
   85                | /* empty */

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | relop_expr

   88 expr: expr add_op term
   89     | term

   90 add_op: OP_PLUS
   91       | OP_MINUS

   92 term: term mul_op factor
   93     | factor

   94 mul_op: OP_TIMES
   95       | OP_DIVIDE

   96 factor: MK_LPAREN relop_expr MK_RPAREN
   97       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | CONST
  100       | OP_MINUS CONST
  101       | OP_NOT CONST
  102       | ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  105       | var_ref
  106       | OP_MINUS var_ref
  107       | OP_NOT var_ref

  108 var_ref: ID
  109        | var_ref dim

  110 dim: MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 31 34 35 36 37 50 51 52 61 70 102 103 104 108
CONST (259) 46 99 100 101
VOID (260) 8 10 29
INT (261) 32
FLOAT (262) 33
IF (263) 59 60
ELSE (264) 60
WHILE (265) 56
FOR (266) 57
TYPEDEF (267) 28 29
OP_ASSIGN (268) 52 58 70
OP_OR (269) 73
OP_AND (270) 75
OP_NOT (271) 98 101 104 107
OP_EQ (272) 78
OP_NE (273) 81
OP_GT (274) 82
OP_LT (275) 83
OP_GE (276) 79
OP_LE (277) 80
OP_PLUS (278) 40 90
OP_MINUS (279) 41 91 97 100 103 106
OP_TIMES (280) 43 94
OP_DIVIDE (281) 44 95
MK_LB (282) 15 16 38 39 110
MK_RB (283) 15 16 38 39 110
MK_LPAREN (284) 7 8 9 10 47 56 57 59 60 61 96 97 98 102 103 104
MK_RPAREN (285) 7 8 9 10 47 56 57 59 60 61 96 97 98 102 103 104
MK_LBRACE (286) 7 8 9 10 55
MK_RBRACE (287) 7 8 9 10 55
MK_COMMA (288) 11 35 36 49 67 86
MK_SEMICOLON (289) 28 29 30 31 57 58 61 62 63 64
MK_DOT (290)
ERROR (291)
RETURN (292) 63 64


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15, on right: 14
dimfn1 (46)
    on left: 16 17, on right: 15 16
expr_null (47)
    on left: 18 19, on right: 15
block (48)
    on left: 20 21 22 23, on right: 7 8 9 10 55
decl_list (49)
    on left: 24 25, on right: 5 20 22 24
decl (50)
    on left: 26 27, on right: 24 25
type_decl (51)
    on left: 28 29, on right: 26
var_decl (52)
    on left: 30 31, on right: 27
type (53)
    on left: 32 33, on right: 7 9 13 14 28 30
id_list (54)
    on left: 34 35 36 37, on right: 28 29 31 35 36
dim_decl (55)
    on left: 38 39, on right: 36 37 39 51
cexpr (56)
    on left: 40 41 42, on right: 38 39 40 41 47
mcexpr (57)
    on left: 43 44 45, on right: 40 41 42 43 44
cfactor (58)
    on left: 46 47, on right: 43 44 45
init_id_list (59)
    on left: 48 49, on right: 30 49
init_id (60)
    on left: 50 51 52, on right: 48 49
stmt_list (61)
    on left: 53 54, on right: 20 21 53
stmt (62)
    on left: 55 56 57 58 59 60 61 62 63 64, on right: 53 54 56 57 59
    60
assign_expr_list (63)
    on left: 65 66, on right: 57
nonempty_assign_expr_list (64)
    on left: 67 68, on right: 65 67
test (65)
    on left: 69, on right: 56 59 60
assign_expr (66)
    on left: 70 71, on right: 67 68 69
relop_expr (67)
    on left: 72 73, on right: 52 58 64 70 71 73 86 87 96 97 98
relop_term (68)
    on left: 74 75, on right: 72 73 75
relop_factor (69)
    on left: 76 77, on right: 74 75
rel_op (70)
    on left: 78 79 80 81 82 83, on right: 77
relop_expr_list (71)
    on left: 84 85, on right: 57 61 102 103 104
nonempty_relop_expr_list (72)
    on left: 86 87, on right: 84 86
expr (73)
    on left: 88 89, on right: 16 18 76 77 88 110
add_op (74)
    on left: 90 91, on right: 88
term (75)
    on left: 92 93, on right: 88 89 92
mul_op (76)
    on left: 94 95, on right: 92
factor (77)
    on left: 96 97 98 99 100 101 102 103 104 105 106 107,
    on right: 92 93
var_ref (78)
    on left: 108 109, on right: 58 105 106 107 109
dim (79)
    on left: 110, on right: 109


state 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


state 1

   31 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 16


state 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 17


state 3

   32 type: INT .

    $default  reduce using rule 32 (type)


state 4

   33 type: FLOAT .

    $default  reduce using rule 33 (type)


state 5

   28 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   29          | TYPEDEF . VOID id_list MK_SEMICOLON

    VOID   shift, and go to state 18
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 19


state 6

    0 $accept: program . $end

    $end  shift, and go to state 20


state 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 21
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


state 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


state 10

    5 global_decl: decl_list . function_decl
   24 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 11

   25 decl_list: decl .

    $default  reduce using rule 25 (decl_list)


state 12

   26 decl: type_decl .

    $default  reduce using rule 26 (decl)


state 13

   27 decl: var_decl .

    $default  reduce using rule 27 (decl)


state 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   30 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


state 15

   34 id_list: ID .
   37        | ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 28


state 16

   31 var_decl: ID id_list . MK_SEMICOLON
   35 id_list: id_list . MK_COMMA ID
   36        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 30


state 17

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 31


state 18

   29 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 32


state 19

   28 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 33


state 20

    0 $accept: program $end .

    $default  accept


state 21

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


state 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


state 23

   24 decl_list: decl_list decl .

    $default  reduce using rule 24 (decl_list)


state 24

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   50 init_id: ID .
   51        | ID . dim_decl
   52        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27
    MK_LPAREN  shift, and go to state 35

    $default  reduce using rule 50 (init_id)

    dim_decl  go to state 36


state 25

   30 var_decl: type init_id_list . MK_SEMICOLON
   49 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


state 26

   48 init_id_list: init_id .

    $default  reduce using rule 48 (init_id_list)


state 27

   38 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 41
    mcexpr   go to state 42
    cfactor  go to state 43


state 28

   37 id_list: ID dim_decl .
   39 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 37 (id_list)


state 29

   35 id_list: id_list MK_COMMA . ID
   36        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 45


state 30

   31 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 31 (var_decl)


state 31

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 46

    param_list  go to state 47
    param       go to state 48
    type        go to state 49


state 32

   29 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   35 id_list: id_list . MK_COMMA ID
   36        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 50


state 33

   28 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   35 id_list: id_list . MK_COMMA ID
   36        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 51


state 34

   52 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 57
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 35

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 64

    param_list  go to state 65
    param       go to state 48
    type        go to state 49


state 36

   39 dim_decl: dim_decl . MK_LB cexpr MK_RB
   51 init_id: ID dim_decl .

    MK_LB  shift, and go to state 44

    $default  reduce using rule 51 (init_id)


state 37

   49 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 66

    init_id  go to state 67


state 38

   30 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


state 39

   46 cfactor: CONST .

    $default  reduce using rule 46 (cfactor)


state 40

   47 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 68
    mcexpr   go to state 42
    cfactor  go to state 43


state 41

   38 dim_decl: MK_LB cexpr . MK_RB
   40 cexpr: cexpr . OP_PLUS mcexpr
   41      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 69
    OP_MINUS  shift, and go to state 70
    MK_RB     shift, and go to state 71


state 42

   42 cexpr: mcexpr .
   43 mcexpr: mcexpr . OP_TIMES cfactor
   44       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 42 (cexpr)


state 43

   45 mcexpr: cfactor .

    $default  reduce using rule 45 (mcexpr)


state 44

   39 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 74
    mcexpr   go to state 42
    cfactor  go to state 43


state 45

   35 id_list: id_list MK_COMMA ID .
   36        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 35 (id_list)

    dim_decl  go to state 75


state 46

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 76


state 47

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 77
    MK_COMMA   shift, and go to state 78


state 48

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


state 49

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 79


state 50

   29 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 29 (type_decl)


state 51

   28 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


state 52

  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .

    MK_LPAREN  shift, and go to state 80

    $default  reduce using rule 108 (var_ref)


state 53

   99 factor: CONST .

    $default  reduce using rule 99 (factor)


state 54

   98 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT . CONST
  104       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT . var_ref

    ID         shift, and go to state 81
    CONST      shift, and go to state 82
    MK_LPAREN  shift, and go to state 83

    var_ref  go to state 84


state 55

   97 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS . CONST
  103       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_MINUS . var_ref

    ID         shift, and go to state 85
    CONST      shift, and go to state 86
    MK_LPAREN  shift, and go to state 87

    var_ref  go to state 88


state 56

   96 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 89
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 57

   52 init_id: ID OP_ASSIGN relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 90

    $default  reduce using rule 52 (init_id)


state 58

   72 relop_expr: relop_term .
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 91

    $default  reduce using rule 72 (relop_expr)


state 59

   74 relop_term: relop_factor .

    $default  reduce using rule 74 (relop_term)


state 60

   76 relop_factor: expr .
   77             | expr . rel_op expr
   88 expr: expr . add_op term

    OP_EQ     shift, and go to state 92
    OP_NE     shift, and go to state 93
    OP_GT     shift, and go to state 94
    OP_LT     shift, and go to state 95
    OP_GE     shift, and go to state 96
    OP_LE     shift, and go to state 97
    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 76 (relop_factor)

    rel_op  go to state 100
    add_op  go to state 101


state 61

   89 expr: term .
   92 term: term . mul_op factor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 89 (expr)

    mul_op  go to state 104


state 62

   93 term: factor .

    $default  reduce using rule 93 (term)


state 63

  105 factor: var_ref .
  109 var_ref: var_ref . dim

    MK_LB  shift, and go to state 105

    $default  reduce using rule 105 (factor)

    dim  go to state 106


state 64

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 107


state 65

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 108
    MK_COMMA   shift, and go to state 78


state 66

   50 init_id: ID .
   51        | ID . dim_decl
   52        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27

    $default  reduce using rule 50 (init_id)

    dim_decl  go to state 36


state 67

   49 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 49 (init_id_list)


state 68

   40 cexpr: cexpr . OP_PLUS mcexpr
   41      | cexpr . OP_MINUS mcexpr
   47 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 69
    OP_MINUS   shift, and go to state 70
    MK_RPAREN  shift, and go to state 109


state 69

   40 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 110
    cfactor  go to state 43


state 70

   41 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 111
    cfactor  go to state 43


state 71

   38 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


state 72

   43 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 112


state 73

   44 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 113


state 74

   39 dim_decl: dim_decl MK_LB cexpr . MK_RB
   40 cexpr: cexpr . OP_PLUS mcexpr
   41      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 69
    OP_MINUS  shift, and go to state 70
    MK_RB     shift, and go to state 114


state 75

   36 id_list: id_list MK_COMMA ID dim_decl .
   39 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 36 (id_list)


state 76

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 23 (block)

    block      go to state 122
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 77

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 128


state 78

   11 param_list: param_list MK_COMMA . param

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 129
    type   go to state 49


state 79

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 130

    $default  reduce using rule 13 (param)

    dim_fn  go to state 131


state 80

  102 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 132
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 133
    nonempty_relop_expr_list  go to state 134
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 81

  104 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .

    MK_LPAREN  shift, and go to state 135

    $default  reduce using rule 108 (var_ref)


state 82

  101 factor: OP_NOT CONST .

    $default  reduce using rule 101 (factor)


state 83

   98 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 136
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 84

  107 factor: OP_NOT var_ref .
  109 var_ref: var_ref . dim

    MK_LB  shift, and go to state 105

    $default  reduce using rule 107 (factor)

    dim  go to state 106


state 85

  103 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .

    MK_LPAREN  shift, and go to state 137

    $default  reduce using rule 108 (var_ref)


state 86

  100 factor: OP_MINUS CONST .

    $default  reduce using rule 100 (factor)


state 87

   97 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 138
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 88

  106 factor: OP_MINUS var_ref .
  109 var_ref: var_ref . dim

    MK_LB  shift, and go to state 105

    $default  reduce using rule 106 (factor)

    dim  go to state 106


state 89

   73 relop_expr: relop_expr . OP_OR relop_term
   96 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 90
    MK_RPAREN  shift, and go to state 139


state 90

   73 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_term    go to state 140
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 91

   75 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_factor  go to state 141
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 92

   78 rel_op: OP_EQ .

    $default  reduce using rule 78 (rel_op)


state 93

   81 rel_op: OP_NE .

    $default  reduce using rule 81 (rel_op)


state 94

   82 rel_op: OP_GT .

    $default  reduce using rule 82 (rel_op)


state 95

   83 rel_op: OP_LT .

    $default  reduce using rule 83 (rel_op)


state 96

   79 rel_op: OP_GE .

    $default  reduce using rule 79 (rel_op)


state 97

   80 rel_op: OP_LE .

    $default  reduce using rule 80 (rel_op)


state 98

   90 add_op: OP_PLUS .

    $default  reduce using rule 90 (add_op)


state 99

   91 add_op: OP_MINUS .

    $default  reduce using rule 91 (add_op)


state 100

   77 relop_factor: expr rel_op . expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 142
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


state 101

   88 expr: expr add_op . term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    term     go to state 143
    factor   go to state 62
    var_ref  go to state 63


state 102

   94 mul_op: OP_TIMES .

    $default  reduce using rule 94 (mul_op)


state 103

   95 mul_op: OP_DIVIDE .

    $default  reduce using rule 95 (mul_op)


state 104

   92 term: term mul_op . factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    factor   go to state 144
    var_ref  go to state 63


state 105

  110 dim: MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 145
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


state 106

  109 var_ref: var_ref dim .

    $default  reduce using rule 109 (var_ref)


state 107

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 23 (block)

    block      go to state 146
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 108

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 147


state 109

   47 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 47 (cfactor)


state 110

   40 cexpr: cexpr OP_PLUS mcexpr .
   43 mcexpr: mcexpr . OP_TIMES cfactor
   44       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 40 (cexpr)


state 111

   41 cexpr: cexpr OP_MINUS mcexpr .
   43 mcexpr: mcexpr . OP_TIMES cfactor
   44       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 41 (cexpr)


state 112

   43 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 43 (mcexpr)


state 113

   44 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 44 (mcexpr)


state 114

   39 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 39 (dim_decl)


state 115

   31 var_decl: ID . id_list MK_SEMICOLON
   61 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .

    ID         shift, and go to state 15
    MK_LPAREN  shift, and go to state 148

    $default  reduce using rule 108 (var_ref)

    id_list  go to state 16


state 116

   59 stmt: IF . MK_LPAREN test MK_RPAREN stmt
   60     | IF . MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 149


state 117

   56 stmt: WHILE . MK_LPAREN test MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 150


state 118

   57 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 151


state 119

   55 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 23 (block)

    block      go to state 152
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 120

   62 stmt: MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


state 121

   63 stmt: RETURN . MK_SEMICOLON
   64     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 52
    CONST         shift, and go to state 53
    OP_NOT        shift, and go to state 54
    OP_MINUS      shift, and go to state 55
    MK_LPAREN     shift, and go to state 56
    MK_SEMICOLON  shift, and go to state 153

    relop_expr    go to state 154
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 122

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 155


state 123

   20 block: decl_list . stmt_list
   22      | decl_list .
   24 decl_list: decl_list . decl

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    decl       go to state 23
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 156
    stmt       go to state 126
    var_ref    go to state 127


state 124

   30 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 66

    init_id_list  go to state 25
    init_id       go to state 26


state 125

   21 block: stmt_list .
   53 stmt_list: stmt_list . stmt

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 21 (block)

    stmt     go to state 158
    var_ref  go to state 127


state 126

   54 stmt_list: stmt .

    $default  reduce using rule 54 (stmt_list)


state 127

   58 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON
  109 var_ref: var_ref . dim

    OP_ASSIGN  shift, and go to state 159
    MK_LB      shift, and go to state 105

    dim  go to state 106


state 128

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 23 (block)

    block      go to state 160
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 129

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


state 130

   15 dim_fn: MK_LB . expr_null MK_RB dimfn1

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 19 (expr_null)

    expr_null  go to state 161
    expr       go to state 162
    term       go to state 61
    factor     go to state 62
    var_ref    go to state 63


state 131

   14 param: type ID dim_fn .

    $default  reduce using rule 14 (param)


state 132

   73 relop_expr: relop_expr . OP_OR relop_term
   87 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 90

    $default  reduce using rule 87 (nonempty_relop_expr_list)


state 133

  102 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 163


state 134

   84 relop_expr_list: nonempty_relop_expr_list .
   86 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 164

    $default  reduce using rule 84 (relop_expr_list)


state 135

  104 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 132
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 165
    nonempty_relop_expr_list  go to state 134
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 136

   73 relop_expr: relop_expr . OP_OR relop_term
   98 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 90
    MK_RPAREN  shift, and go to state 166


state 137

  103 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 132
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 167
    nonempty_relop_expr_list  go to state 134
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 138

   73 relop_expr: relop_expr . OP_OR relop_term
   97 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 90
    MK_RPAREN  shift, and go to state 168


state 139

   96 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 96 (factor)


state 140

   73 relop_expr: relop_expr OP_OR relop_term .
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 91

    $default  reduce using rule 73 (relop_expr)


state 141

   75 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 75 (relop_term)


state 142

   77 relop_factor: expr rel_op expr .
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 77 (relop_factor)

    add_op  go to state 101


state 143

   88 expr: expr add_op term .
   92 term: term . mul_op factor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 88 (expr)

    mul_op  go to state 104


state 144

   92 term: term mul_op factor .

    $default  reduce using rule 92 (term)


state 145

   88 expr: expr . add_op term
  110 dim: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99
    MK_RB     shift, and go to state 169

    add_op  go to state 101


state 146

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 170


state 147

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 23 (block)

    block      go to state 171
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 148

   61 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 132
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 172
    nonempty_relop_expr_list  go to state 134
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 149

   59 stmt: IF MK_LPAREN . test MK_RPAREN stmt
   60     | IF MK_LPAREN . test MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    test          go to state 174
    assign_expr   go to state 175
    relop_expr    go to state 176
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 150

   56 stmt: WHILE MK_LPAREN . test MK_RPAREN stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    test          go to state 177
    assign_expr   go to state 175
    relop_expr    go to state 176
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 151

   57 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 178
    nonempty_assign_expr_list  go to state 179
    assign_expr                go to state 180
    relop_expr                 go to state 176
    relop_term                 go to state 58
    relop_factor               go to state 59
    expr                       go to state 60
    term                       go to state 61
    factor                     go to state 62
    var_ref                    go to state 63


state 152

   55 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 181


state 153

   63 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


state 154

   64 stmt: RETURN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 90
    MK_SEMICOLON  shift, and go to state 182


state 155

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


state 156

   20 block: decl_list stmt_list .
   53 stmt_list: stmt_list . stmt

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 20 (block)

    stmt     go to state 158
    var_ref  go to state 127


state 157

   61 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .

    MK_LPAREN  shift, and go to state 148

    $default  reduce using rule 108 (var_ref)


state 158

   53 stmt_list: stmt_list stmt .

    $default  reduce using rule 53 (stmt_list)


state 159

   58 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 183
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 160

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 184


state 161

   15 dim_fn: MK_LB expr_null . MK_RB dimfn1

    MK_RB  shift, and go to state 185


state 162

   18 expr_null: expr .
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 18 (expr_null)

    add_op  go to state 101


state 163

  102 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 102 (factor)


state 164

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 186
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 165

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 187


state 166

   98 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 98 (factor)


state 167

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 188


state 168

   97 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


state 169

  110 dim: MK_LB expr MK_RB .

    $default  reduce using rule 110 (dim)


state 170

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


state 171

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 189


state 172

   61 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 190


state 173

   70 assign_expr: ID . OP_ASSIGN relop_expr
  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .

    OP_ASSIGN  shift, and go to state 191
    MK_LPAREN  shift, and go to state 80

    $default  reduce using rule 108 (var_ref)


state 174

   59 stmt: IF MK_LPAREN test . MK_RPAREN stmt
   60     | IF MK_LPAREN test . MK_RPAREN stmt ELSE stmt

    MK_RPAREN  shift, and go to state 192


state 175

   69 test: assign_expr .

    $default  reduce using rule 69 (test)


state 176

   71 assign_expr: relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 90

    $default  reduce using rule 71 (assign_expr)


state 177

   56 stmt: WHILE MK_LPAREN test . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 193


state 178

   57 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 194


state 179

   65 assign_expr_list: nonempty_assign_expr_list .
   67 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 195

    $default  reduce using rule 65 (assign_expr_list)


state 180

   68 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 68 (nonempty_assign_expr_list)


state 181

   55 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 55 (stmt)


state 182

   64 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


state 183

   58 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 90
    MK_SEMICOLON  shift, and go to state 196


state 184

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


state 185

   15 dim_fn: MK_LB expr_null MK_RB . dimfn1

    MK_LB  shift, and go to state 197

    $default  reduce using rule 17 (dimfn1)

    dimfn1  go to state 198


state 186

   73 relop_expr: relop_expr . OP_OR relop_term
   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 90

    $default  reduce using rule 86 (nonempty_relop_expr_list)


state 187

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 104 (factor)


state 188

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 103 (factor)


state 189

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


state 190

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 199


state 191

   70 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 200
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 192

   59 stmt: IF MK_LPAREN test MK_RPAREN . stmt
   60     | IF MK_LPAREN test MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 201
    var_ref  go to state 127


state 193

   56 stmt: WHILE MK_LPAREN test MK_RPAREN . stmt

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 202
    var_ref  go to state 127


state 194

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 132
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 203
    nonempty_relop_expr_list  go to state 134
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 195

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 173
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    assign_expr   go to state 204
    relop_expr    go to state 176
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 196

   58 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 58 (stmt)


state 197

   16 dimfn1: MK_LB . expr MK_RB dimfn1

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 205
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


state 198

   15 dim_fn: MK_LB expr_null MK_RB dimfn1 .

    $default  reduce using rule 15 (dim_fn)


state 199

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


state 200

   70 assign_expr: ID OP_ASSIGN relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 90

    $default  reduce using rule 70 (assign_expr)


state 201

   59 stmt: IF MK_LPAREN test MK_RPAREN stmt .
   60     | IF MK_LPAREN test MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 206

    ELSE      [reduce using rule 59 (stmt)]
    $default  reduce using rule 59 (stmt)


state 202

   56 stmt: WHILE MK_LPAREN test MK_RPAREN stmt .

    $default  reduce using rule 56 (stmt)


state 203

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 207


state 204

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 67 (nonempty_assign_expr_list)


state 205

   16 dimfn1: MK_LB expr . MK_RB dimfn1
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99
    MK_RB     shift, and go to state 208

    add_op  go to state 101


state 206

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 209
    var_ref  go to state 127


state 207

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 173
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 210
    nonempty_assign_expr_list  go to state 179
    assign_expr                go to state 180
    relop_expr                 go to state 176
    relop_term                 go to state 58
    relop_factor               go to state 59
    expr                       go to state 60
    term                       go to state 61
    factor                     go to state 62
    var_ref                    go to state 63


state 208

   16 dimfn1: MK_LB expr MK_RB . dimfn1

    MK_LB  shift, and go to state 197

    $default  reduce using rule 17 (dimfn1)

    dimfn1  go to state 211


state 209

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 60 (stmt)


state 210

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 212


state 211

   16 dimfn1: MK_LB expr MK_RB dimfn1 .

    $default  reduce using rule 16 (dimfn1)


state 212

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 213
    var_ref  go to state 127


state 213

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 57 (stmt)
